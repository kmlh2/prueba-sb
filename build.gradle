plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'jacoco'

}

group = 'com.store'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.5'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.7.5'

	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.31'
	implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.7.5'

	implementation group: 'org.springframework', name: 'spring-web', version: '5.3.23'

	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.hibernate.validator:hibernate-validator:6.0.13.Final'
	implementation 'org.glassfish:javax.el:3.0.0'
	
	testImplementation 'junit:junit'
	testImplementation group: 'io.projectreactor', name: 'reactor-test', version: '3.1.0.RELEASE'

//	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.1'


}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['com.store.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}
